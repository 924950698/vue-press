(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{189:function(t,r,a){"use strict";a.r(r);var e=a(0),i=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gitlab-操作手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-操作手册","aria-hidden":"true"}},[t._v("#")]),t._v(" gitLab 操作手册")]),t._v(" "),a("h2",{attrs:{id:"食用指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#食用指南","aria-hidden":"true"}},[t._v("#")]),t._v(" 食用指南")]),t._v(" "),a("p",[t._v("我总结了下使用的场景，大概有以后两个地方：")]),t._v(" "),a("ol",[a("li",[t._v("项参与开源项目的开发，肯定是要fork到本地，然后在做更改的。")]),t._v(" "),a("li",[t._v("部分公司使用gitLab来管理项目，有fork项目到本地的要求的。")])]),t._v(" "),a("h3",{attrs:{id:"第一步-fork项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-fork项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一步 fork项目")]),t._v(" "),a("ol",[a("li",[t._v("我们公司现在是要求新入职的员工先在自己的GitLab新建项目，然后找到团队的项目，点击fork。")]),t._v(" "),a("li",[t._v("这时，大家可以在自己的gitLab上看到有两个项目：一个是公司的，一个是个人的。项目名称都是一样的。区别是前缀不一致。")]),t._v(" "),a("li",[t._v("下图中1是我fork后的项目，2是团队的项目。大家可以参考下。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/06/14/5d02f849bc79512572.jpg",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"第二步-建立联系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-建立联系","aria-hidden":"true"}},[t._v("#")]),t._v(" 第二步 建立联系")]),t._v(" "),a("ol",[a("li",[t._v("然后把自己的项目down本地，执行 git remote add nbfe(远程仓储名名称唯一即可) <团队的项目地址>")]),t._v(" "),a("li",[t._v("这个时候执行git remote -v 来查看是否建立了连接。此命令会把所有的远程地址都显示出来。应该一条是团队项目地址，一条是自己的项目地址。如下图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/06/14/5d02f97cf0b0515688.jpg",alt:""}}),t._v("\n3. 然后，git fetch nbFe:master "),a("br"),t._v("\n4. 继续，git merge nbFe:master"),a("br"),t._v("\n5. 这样就把远程团队项目的master分支代码，拉到本地的master分支了。")]),t._v(" "),a("h3",{attrs:{id:"第三步-将本地代码合并到远端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-将本地代码合并到远端","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三步 将本地代码合并到远端")]),t._v(" "),a("ol",[a("li",[t._v("创建合并的请求，当我们在对需求开发完成以后。这个时候，就需要创建一个合并的请求，等待管理员通过后，就可以merge到团队项目了。")]),t._v(" "),a("li",[t._v("大家看第一张图的右上角，有一个蓝色按钮“Create merge request” ,  点击进入。"),a("br"),t._v("就是下面这种图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/06/14/5d02fb5e1f75755915.jpg",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("title大家应该都懂；“Source branch” 是你当前要合并的分支； “Target branch”是你想要合并到团队项目的远端分支名称。大家可以看到，我现在的分支是v2.4.5，我想要合并到的目标分支是远端的v2.4.5，这个时候“Target branch”与我的目标不一致。就需要更改，点击“Change branches”,"),a("br"),t._v("就会看到如下图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/06/14/5d02fca01737593610.jpg",alt:""}}),t._v("\n图上很清晰，无论是想改变“Source branch”或者“Target branch”都可以在下拉选框中选择目标分支。然后点击绿色按钮“Compare branches and continue”，这一步就更改完成了。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("这个时候会跳转回到上一级目录，点击“Submit merge request”按钮就完成了合并请求的提交了。\n"),a("img",{attrs:{src:"https://i.loli.net/2019/06/14/5d02fd5599b6b31717.jpg",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("将链接地址和标题通知管理员，他审核通过后，就会将代码合并到团队项目上。")])])]),t._v(" "),a("h3",{attrs:{id:"第四步-远程代码更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四步-远程代码更新","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四步 远程代码更新")]),t._v(" "),a("ol",[a("li",[t._v("如果远程代码更新了，重复上述步骤3，4即可。")])])])},[],!1,null,null,null);r.default=i.exports}}]);